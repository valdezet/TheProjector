@{
    @model TheProjector.Data.Form.ProjectForm;

}

<div>

    <h3>New Project</h3>

    <form method="POST">
        <div class="mb-3">
            <label asp-for="Code"></label>
            <input asp-for="Code" class="form-control" placeholder=" " />
            <label class="form-check-label" for="manually-change-code">Customize Code?</label>
            <input type="checkbox" id="manually-change-code" class="form-check-input">
            <p class="p-0 m-0">
                <span asp-validation-for="Code" class="text text-danger"></span>
            </p>
        </div>

        <div class="mb-3">
            <label asp-for="Name"></label>
            <input asp-for="Name" class="form-control" placeholder=" " />
            <span asp-validation-for="Name" class="text text-danger"></span>
        </div>

        <div class=" mb-3">
            <label asp-for="Budget"></label>
            <input asp-for="Budget" class="form-control" placeholder=" " />
            <span asp-validation-for="Budget" class="text text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Remarks" class="form-label"></label>
            <textarea class="form-control" asp-for="Remarks" rows="5" placeholder=" "></textarea>
            <span asp-validation-for="Remarks" class="text text-danger"></span>
        </div>

        <input type="submit" class="btn btn-primary" value="Create">


    </form>



</div>

@section Scripts {
    <script>
        let codeInputElement = document.querySelector("input[name='Code']");
        let nameInputElement = document.querySelector("input[name='Name']");
        let customizeCodeCheckElement = document.querySelector("input#manually-change-code");
        let shouldChangeCodeAutomatically = !customizeCodeCheckElement.checked;
        let nameInputChanged = (event) => {
            if (shouldChangeCodeAutomatically) {
                let autoGeneratedCode = event.target.value.replaceAll(" ", "-").toLowerCase();
                codeInputElement.value = autoGeneratedCode;

            }
        }
        let customizeCodeCheckChanged = (event) => {
            let shouldManuallyChange = event.target.checked;
            codeInputElement.readOnly = !shouldManuallyChange;
            shouldChangeCodeAutomatically = !shouldManuallyChange;
            codeInputElement.readOnly = !shouldManuallyChange;
        }

        (() => {
            let isCodeCustomizedOnLoad = nameInputElement.value.toLowerCase().replaceAll(" ", "-") !== codeInputElement.value;
            shouldChangeCodeAutomatically = !isCodeCustomizedOnLoad;
            customizeCodeCheckElement.checked = isCodeCustomizedOnLoad;
            codeInputElement.readOnly = !isCodeCustomizedOnLoad
        })()
        nameInputElement.addEventListener("keyup", nameInputChanged);
        customizeCodeCheckElement.addEventListener("change", customizeCodeCheckChanged);

    </script>
}