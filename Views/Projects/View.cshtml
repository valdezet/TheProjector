@{
    @model TheProjector.Data.ViewModels.ProjectViewViewModel;
ViewData["Title"] = @Model.BasicInfo.Name;
}

<div>
    <div class="mb-3">
        <h4>@Model.BasicInfo.Name</h4>
        <h5 class="text-muted">@Model.BasicInfo.Code</h5>
    </div>

    <p title="@Model.BasicInfo.Budget" class="mb-3">Budget: @Model.BasicInfo.BudgetShortHand</p>

    <h5>Remarks</h5>
    <p>@(Model.BasicInfo.Remarks ?? "None")</p>
    <hr />
    <div class="col-mb-2">
        <h4>Assign People</h4>
        <form id="assign-person" asp-action="AssignPerson" class="row">
            <div class="col-sm-10 col-md-11">
                <select name="PersonId" class="form-select">
                    <option disabled value="0" selected>None Selected</option>
                    @if (Model.AssignablePeople != null)
                    {
                        @foreach (var person in Model.AssignablePeople)
                        {
                            <option value="@person.Id">@person.Name</option>
                        }
                    }
                </select>
            </div>
            <div class="col-sm-2 col-md-1">
                <input type="submit" value="Assign" class="btn btn-primary">
            </div>
        </form>
        <div id="person-assignment-errors">

        </div>
    </div>
    <div class="col-mb-3">
        <h4>Assigned People</h4>
        <table class="table table-sm">
            <thead>
                <th>Name</th>
                <th>Actions</th>
            </thead>
            <tbody id="assigned-people">
                @foreach (var person in Model.AssignedPeople)
                {
                    <tr>
                        <td>@person.Name</td>
                        <td>
                            <form asp-action="UnassignPerson">
                                <input type="hidden" name="PersonId" value="@person.Id" />
                                <input type="submit" class="btn btn-danger" value="Unassign" />
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        var unassignPersonAction = '@Url.Action("UnassignPerson")';

        var $assignedPeople = $("tbody#assigned-people");
        function clearAssignmentErrors() {
            $("#person-assignment-errors").html("");
        }

        function addAssignedPerson(id, name) {
            let $newRow = $("<tr></tr");
            let $newNameTd = $("<td></td>").html(name);
            $newRow.append($newNameTd);
            let $removeTd = $("<td></td>");
            let $removeForm = $("<form></form>");
            $removeForm.attr("action", unassignPersonAction);
            let $removeIdHidden = $(`<input type='hidden' name='PersonId' value='${id}'/>`);
            $removeForm.append($removeIdHidden);
            let $removeButton = $("<input type='submit' class='btn btn-danger' value='Unassign'/>");
            $removeForm.append($removeButton);
            $removeTd.append($removeForm);
            $newRow.append($removeTd);
            $assignedPeople.append($newRow);
        }

        $("form#assign-person").submit(function (e) {
            e.preventDefault();
            clearAssignmentErrors();
            let $form = $(e.target);
            let $selectedOption = $form.find("option:selected");
            console.debug($form);
            console.debug("selected option:", $selectedOption.val());
            if ($selectedOption.val() === "0") {
                window.alert("Please select a person to assign.");
            }
            $.post(
                $form.attr('action'),
                $form.serialize(),
                function (data) {
                    $selectedOption.remove();
                    window.alert("The Person is successfully assigned to the project");

                    addAssignedPerson($selectedOption.val(), $selectedOption.html());
                }
            ).fail(function (jqXHR, textStatus, errorThrown) {
                if (jqXHR.status === 400) {
                    let errors = jqXHR.responseJSON;

                    for (let key in errors) {
                        $("#person-assignment-errors").append(
                            $("<p class='text-danger'></p>").html(errors[key])
                        );
                    }
                }
            });
        })

    </script>
}